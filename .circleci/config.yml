version: 2.1

.service_name: &service_name github-discussions-crawler

.default_image: &default_image
  docker:
  - image: circleci/openjdk:8-jdk
  working_directory: ~/project

.default_machine: &default_machine
  machine: true
  working_directory: ~/project

.defaults: &defaults
  environment:
    MAINTAINER: "info@qualiton.org"
    SERVICE_NAME: *service_name
    HELM_VERSION: "v2.10.0"

.attach_workspace: &attach_workspace
  attach_workspace:
    at: ~/

.persist_to_workspace: &persist_to_workspace
  persist_to_workspace:
    root: ~/
    paths:
    - project/*

.persist_coverage_data_to_workspace: &persist_coverage_data_to_workspace
  persist_to_workspace:
    root: ~/
    paths:
    - project/*/target/scala-2.12/scoverage-data/scoverage.measurements.*

.cache_key: &cache_key
              v1-repo-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Branch }}-{{ checksum "project/Dependencies.scala"}}

.restore_cache: &restore_cache
  restore_cache:
    name: Restoring project cache
    keys:
    - *cache_key

.setup_git: &setup_git
  run:
    name: Setup git
    command: |
      sh .circleci/scripts/init_github.sh

commands:
  store_coverage_files:
    description: "Store coverage data files"
    parameters:
      test_type:
        default: "test"
        type: enum
        enum: ["test", "it", "e2e"]
    steps:
    - run:
        name: Rename coverage data files
        command: |
          find . -iname "scoverage.measurements.*" -exec rename 's/(.*)/$1.<< parameters.test_type >>/' '{}' \;
    - *persist_coverage_data_to_workspace

jobs:
  compile:
    <<: *default_image
    steps:
    - checkout
    - *restore_cache
    - run:
        name: Compile project
        command: sbt ";clean ;coverage ;compile ;test:compile ;it:compile ;e2e:compile"
    - save_cache:
        name: Saving project cache
        key: *cache_key
        paths:
        - ~/.m2
        - ~/.ivy2
        - ~/.sbt
        - target/resolution-cache
        - project/target/resolution-cache
    - *persist_to_workspace

  test:
    <<: *default_image
    steps:
    - *attach_workspace
    - *restore_cache
    - run:
        name: Run tests
        command: sbt coverage test
    - store_coverage_files:
        test_type: "test"

  ittest:
    <<: *default_machine
    steps:
    - *attach_workspace
    - *restore_cache
    - run:
        name: Run integration tests
        command: sbt coverage it:test
    - store_coverage_files:
        test_type: "it"

  e2etest:
    <<: *default_machine
    steps:
    - *attach_workspace
    - *restore_cache
    - run:
        name: Run e2e tests
        command: sbt coverage e2e:test
    - store_coverage_files:
        test_type: "e2e"

  coverage:
    <<: *default_machine
    steps:
    - *attach_workspace
    - *restore_cache
    - run:
        name: Generate coverage report
        command: |
          ls -laR | grep "scoverage.measurements"
          sbt coverageReport
          sbt coverageAggregate
          sbt coveralls

  build:
    <<: *default_image
    <<: *defaults
    steps:
    - *attach_workspace
    - *restore_cache
    - setup_remote_docker
    - *setup_git
    - run:
        name: Sbt release
        command: |
          sbt "release with-defaults"
    - run:
        name: Docker Login
        command: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
    - run:
        name: Push container to registry
        command: |
          docker push "$DOCKER_USERNAME/$SERVICE_NAME"
    - *persist_to_workspace

  release_chart:
    <<: *default_image
    <<: *defaults
    steps:
    - *attach_workspace
    - *restore_cache
    - *setup_git
    - run:
        name: Init helm
        command: |
          curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash -s -- -v $HELM_VERSION
          helm init --client-only
    - run:
        name: Package chart
        command: |
          cd ~/project/.helm
          helm package $SERVICE_NAME
          mv $SERVICE_NAME-*.tgz /tmp
    - run:
        name: Release chart
        command: |
          cd ~/project/
          git checkout gh-pages
          git clean -f -d
          VERSION=`ls /tmp/$SERVICE_NAME-*.tgz | awk -F"$SERVICE_NAME-" '{print $2}' | awk -F".tgz" '{print $1}'`
          mv /tmp/$SERVICE_NAME-*.tgz .
          helm repo index . --url https://qualiton.github.io/github-discussions-crawler/
          git add .
          git commit -a -m "add version $VERSION"
          git push origin gh-pages

workflows:
  version: 2
  build-and-deploy:
    jobs:
    - compile
    - test:
        requires:
        - compile
    - ittest:
        requires:
        - compile
    - e2etest:
        requires:
        - compile
    - coverage:
        requires:
        - test
        - ittest
        - e2etest
    - build:
        filters:
          branches:
            only: master
        requires:
        - coverage
    - release_chart:
        requires:
        - build
